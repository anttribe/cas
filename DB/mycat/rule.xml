<?xml version="1.0" encoding="UTF-8"?>
<!-- - - Licensed under the Apache License, Version 2.0 (the "License"); 
	- you may not use this file except in compliance with the License. - You 
	may obtain a copy of the License at - - http://www.apache.org/licenses/LICENSE-2.0 
	- - Unless required by applicable law or agreed to in writing, software - 
	distributed under the License is distributed on an "AS IS" BASIS, - WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. - See the 
	License for the specific language governing permissions and - limitations 
	under the License. -->
<!DOCTYPE mycat:rule SYSTEM "rule.dtd">
<mycat:rule xmlns:mycat="http://org.opencloudb/">
	<tableRule name="rule_id">
		<rule>
			<columns>id</columns>
			<algorithm>string-hash</algorithm>
		</rule>
	</tableRule>
	
	<tableRule name="rule_create_month">
		<rule>
			<columns>create_month</columns>
			<algorithm>mod-long</algorithm>
		</rule>
	</tableRule>

	<!-- 一致性hash算法 -->
	<function name="murmur-hash" class="org.opencloudb.route.function.PartitionByMurmurHash">
		<!-- 默认是0 -->
		<property name="seed">0</property>
		<!-- 要分片的数据库节点数量，必须指定，否则没法分片 -->
		<property name="count">2</property>
		<!-- 一个实际的数据库节点被映射为这么多虚拟节点，默认是160倍，也就是虚拟节点数是物理节点数的160倍 -->
		<property name="virtualBucketTimes">160</property>
		<!-- 节点的权重，没有指定权重的节点默认是1。以properties文件的格式填写，以从0开始到count-1的整数值也就是节点索引为key，以节点权重值为值。所有权重值必须是正整数，否则以1代替 -->
		<!-- <property name="weightMapFile">weightMapFile</property>-->
		<!-- 用于测试时观察各物理节点与虚拟节点的分布情况，如果指定了这个属性，会把虚拟节点的murmur hash值与物理节点的映射按行输出到这个文件，没有默认值，如果不指定，就不会输出任何东西 -->
		<!-- <property name="bucketMapPath">/etc/mycat/bucketMapPath</property> -->
	</function>
	
	<!-- 分片枚举算法 -->
	<function name="hash-int"
		class="org.opencloudb.route.function.PartitionByFileMap">
		<!-- 标识配置文件名称 -->
		<property name="mapFile">partition-hash-int.txt</property>
		<!-- 0：Integer，非0表示String -->
		<property name="type">0</property>
		<!-- 
		    默认节点，小于0表示不设置默认节点。作用：枚举分片时，如果碰到不识别的枚举值，就让它路由到默认节点
		    如果不配置默认节点，碰到不识别的枚举值就会报错
		-->
		<property name="defaultNode">0</property>
	</function>
	
	<!-- 范围约定算法 -->
	<function name="rang-long" class="org.opencloudb.route.function.AutoPartitionByLong">
		<!-- 标识配置文件名称 -->
		<property name="mapFile">autopartition-long.txt</property>
		<property name="defaultNode">0</property>
	</function>
	
	<!-- 求模算法 -->
	<function name="mod-long" class="org.opencloudb.route.function.PartitionByMod">
		<!-- how many data nodes, 分片数量 -->
		<property name="count">2</property>
	</function>

	<!-- 固定分片hash算法 -->
	<function name="long-hash" class="org.opencloudb.route.function.PartitionByLong">
	    <!-- 分片个数列表 -->
		<property name="partitionCount">2</property>
		<!-- 分片范围列表，分区长度：默认为最大2^n=1024，即最大支持1024分区 -->
		<!-- count，length两个数组的长度必须是一致的，1024=sum(count[i] * length[i]), 即count和length两个向量的点积恒等于1024 -->
		<property name="partitionLength">512</property>
	</function>
	
	<!-- 字符串hash解析算法 -->
	<function name="string-hash" class="org.opencloudb.route.function.PartitionByString">
	    <!-- 分区数 -->
		<property name="partitionCount">2</property>
		<!-- 字符串hash求模基数 -->
		<property name="partitionLength">512</property>
		<!-- hash预算位 -->
		<property name="hashSlice">0:2</property>
	</function>
	
	<!-- 按单月小时拆分算法 -->
	<function name="latest-month" class="org.opencloudb.route.function.LatestMonthPartion">
		<!-- 一天切分的分片数 -->
		<property name="splitOneDay">24</property>
	</function>
	
	<!-- 自然月分片算法 -->
	<function name="month" class="org.opencloudb.route.function.PartitionByMonth">
		<!-- 日期格式，即将列字段按照该格式进行格式化 -->
		<property name="dateFormat">yyyyMMdd</property>
		<!-- 开始日期 -->
		<property name="sBeginDate">2015-01-01</property>
	</function>
	
	<!-- 按日期(天)分片算法  targetPartition = (int)((targetTime - beginDate) / partitionDay);-->
	<function name="partbydate" class="org.opencloudb.route.function.PartitionByDate">
		<!-- 日期格式，即将列字段按照该格式进行格式化 -->
		<property name="dateFormat">yyyyMMdd</property>
		<!-- 开始日期 -->
		<property name="sBeginDate">2015-01-01</property>
		<!-- 分区天数，即默认从开始日期算起，分隔10天一个分区 -->
		<property name="sPartionDay">10</property>
	</function>
	
	<!-- 取模范围约束算法 -->
	<function name="rang-mod" class="org.opencloudb.route.function.PartitionByRangeMod">
	    <!-- 求模基数 -->
		<property name="patternValue">256</property>
		<!-- 默认节点 -->
	    <property name="defaultNode">2</property>
		<!-- 标识配置文件名称 -->
		<!-- 配置文件中，1-32即代表id%256后分布的范围，如果在1-32范围内，则在对应的分区，如果id非数据，则会分配在defaultNode默认节点 -->
        <property name="mapFile">partition-range-mod.txt</property>
	</function>
	
	<!-- ASCII码求模取值范围约束算法 -->
	<function name="prefix-mod" class="org.opencloudb.route.function.PartitionByPrefixPattern">
	    <!-- 求模基数 -->
		<property name="patternValue">256</property>
		<!-- 默认节点 -->
	    <property name="prefixLength">5</property>
		<!-- 标识配置文件名称 -->
		<!-- 配置文件中，1-32即代表id%256后分布的范围，如果在1-32范围内，则在对应的分区
 		     获取前prefixLength位列所有ASCII码和进行求模sum%patternValue获取的值
		-->
        <property name="mapFile">partition-range-mod.txt</property>
	</function>
	
	<!-- 应用指定算法：运行过程中由应用自主决定 -->
	<function name="substring" class="org.opencloudb.route.function.PartitionDirectBySubString">
		<!-- 截取子字符串的开始位置 -->
		<property name="startIndex">0</property>
		<!-- 截取子字符串的长度 -->
		<property name="size">2</property>
		<property name="partitionCount">8</property>
		<property name="defaultPartition">0</property>
	</function>
	
	<function name="jump-consistent-hash" class="org.opencloudb.route.function.PartitionByJumpConsistentHash">
		<property name="totalBuckets">3</property>
	</function>
</mycat:rule>
